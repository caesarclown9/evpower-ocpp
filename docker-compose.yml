version: '3.8'

services:
  redis:
    image: redis:alpine
    container_name: evpower-redis
    restart: unless-stopped
    volumes:
      - redis-data:/data
    command: redis-server --maxmemory 256mb --maxmemory-policy allkeys-lru --save "" --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - coolify

  evpower-backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: evpower-backend
    restart: unless-stopped
    environment:
      # Переопределяем критичные переменные для production
      APP_ENV: production
      APP_PORT: 9210
      OCPP_WS_PORT: 9210
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9210/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - coolify
    volumes:
      - ./backend/certificates:/app/certificates:ro
      - /var/log/evpower-ocpp:/var/log/evpower-ocpp
    labels:
      # Метки для Coolify
      - "coolify.managed=true"
      - "coolify.type=compose"
      - "coolify.applicationId=evpower-ocpp"
      - "coolify.serviceId=evpower-backend"
      - "coolify.main=true"
      - "coolify.port=9210"

networks:
  coolify:
    external: true

volumes:
  redis-data:
    driver: local